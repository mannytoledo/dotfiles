# improve colors
set-option -ga terminal-overrides ",xterm-256color:Tc"

set -g default-shell $SHELL


# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# Quick escape key response, to not break vim flow
set -s escape-time 20

# mouse behavior
set -g mouse on
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M
# bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PPage"
bind-key -T copy-mode-vi PPage page-up
bind-key -T copy-mode-vi NPage page-down

# bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
# bind-key -t copy-mode WheelUpPane halfpage-up
# bind-key -t copy-mode WheelDownPane halfpage-down

# bind -n WheelUpPane   select-pane -t= \; copy-mode -e \; send-keys -M
# bind -n WheelDownPane select-pane -t= \;                 send-keys -M

# bind -t copy-mode    C-WheelUpPane   halfpage-up
# bind -t copy-mode    C-WheelDownPane halfpage-down
# bind -t emacs-copy C-WheelUpPane   halfpage-up
# bind -t emacs-copy C-WheelDownPane halfpage-down

# bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

bind-key : command-prompt
bind-key r refresh-client

# Clearing windows
bind-key C-l clear-history
bind C-l send-keys 'C-l'

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key -n C-h send-keys Escape "[104;5u"


# Smart pane switching with awareness of vim splits, for use with 'christoomey/vim-tmux-navigator'
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# Escape sequence is used to work around nvim bug tracked here: https://github.com/neovim/neovim/issues/2048
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L" this line was the original entry
bind -n C-h if-shell "$is_vim" "send-keys Escape '[104;5u'" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# smart pane switching with awareness of vim splits
# This approach did not work as well and was buggy after switching to nvim and upgradign to yosemite
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-h select-pane -L
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-j select-pane -D
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-k select-pane -U
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-l select-pane -R
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind -n C-\ select-pane -l

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode-vi
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
# bind-key -T copy-mode v begin-selection
# bind-key -T copy-mode y copy-pipe "reattach-to-user-namespace pbcopy"

# bind-key -Tcopy-mode-vi 'v' send -X begin-selection
# bind-key -Tcopy-mode-vi 'y' send -X copy-selection
# bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle

# Update default binding of `Enter` to also use copy-pipe
# unbind -T copy-mode Enter
# bind-key -T copy-mode Enter copy-pipe "reattach-to-user-namespace pbcopy"

# set-window-option -g display-panes-time 1500

# -- display -------------------------------------------------------------------

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
setw -g automatic-rename-format '#I #F #{command} #{hook} #{line}'
set -g renumber-windows on  # renumber windows when a window is closed

set -g set-titles off                        # set terminal title
# set -g set-titles-string '#h ❐ #S ● #I #W'
# set -g set-titles-string '#h'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
# bind -n C-l send-keys C-l \; run 'sleep 0.05 && tmux clear-history'

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

#----------------------------------------------------------------------------



# Enable native Mac OS X copy/paste
# set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Fix LSOPENURLsWithRole() issue on Yosemite
# set -g default-command "reattach-to-user-namespace -l /bin/bash"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Increase the terminal buffer
set-option -g history-limit 7000

source ~/.tm-theme/tm-theme.conf
