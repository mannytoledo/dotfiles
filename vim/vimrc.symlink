" Enable Syntax highlighting
filetype on " without this vim emits a zero exit status, later, because of :ft off
filetype off

"Some stuff to get Vundle to work
set nocompatible  " be iMproved

set rtp+=~/.vim/bundle/vundle/
call vundle#begin()
" Let Vundle manage Vundle
" required!
Plugin 'gmarik/vundle'

" My Bundles
Plugin 'bling/vim-airline'
"Plugin 'Lokaltog/vim-easymotion'
Plugin 'mileszs/ack.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'skwp/greplace.vim'
Plugin 't9md/vim-chef'
Plugin 'austintaylor/vim-indentobject'
Plugin 'fatih/vim-go'
Plugin 'vim-scripts/kwbdi.vim'
Plugin 'tmhedberg/matchit'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-pastie'
Plugin 'tpope/vim-rake'
Plugin 'altercation/vim-colors-solarized'
Plugin 'tpope/vim-surround'
Plugin 'rizzatti/funcoo.vim'
Plugin 'rizzatti/dash.vim'
Plugin 'scrooloose/syntastic'
Plugin 'rosstimson/bats.vim'
Plugin 'majutsushi/tagbar'
Plugin 'leafgarland/typescript-vim'
Plugin 'tpope/vim-unimpaired'
Plugin 'tpope/vim-repeat'
Plugin 'jtratner/vim-flavored-markdown'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tpope/vim-vividchalk'
Plugin 'w0ng/vim-hybrid'
Plugin 'elzr/vim-json'
Plugin 'git@github.com:SirVer/ultisnips.git'
Plugin 'Shougo/unite.vim'
"Plugin 'alpaca-tc/vim-unite-watson.vim'
Plugin 'ngmy/vim-rubocop'
Plugin 'Valloric/YouCompleteMe'

" Languages
Plugin 'kchmck/vim-coffee-script'
Plugin 'tpope/vim-rails.git'
Plugin 'slim-template/vim-slim'

" Colors
Plugin 'nanotech/jellybeans.vim'
Plugin 'Pychimp/vim-luna'
Plugin 'baskerville/bubblegum'

call vundle#end()
filetype plugin indent on
syntax enable

" Various sets to make stuff better
set autoindent
set autoread
set backspace=2        "indent,eol,start
set backupcopy=yes
"set t_vb=
set clipboard=unnamed
set cmdheight=2
set cursorline
set directory-=.
set encoding=utf-8
set expandtab
set formatoptions=qrn1
set ignorecase
set incsearch
set laststatus=2
set list
set listchars=tab:▸\ ,trail:▫
set hidden
set number
set ruler
set scrolloff=3
set shiftwidth=2
set showcmd
set smartindent
set smartcase
set softtabstop=2
set splitright
set switchbuf=useopen
set synmaxcol=400
set tabstop=8
set t_Co=256
set visualbell
set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc
set wildmenu
set wildmode=longest,list,full

" I don't know what these do but I should find out
set noswapfile
"set nobackup
set undofile
set undodir=~/tmp/vim/undo

" Same here I don't know what these do but I need to figure it out
set showmatch
set incsearch
set hlsearch
set foldlevelstart=0

" Better Completion
set omnifunc=syntaxcomplete#Complete
set complete=.,w,b,u,t
set completeopt+=longest,menuone,preview

" mouse=a will prevent you from copying using the mouse in iterm
set mouse=a
if exists('$TMUX') "Support resizing in TMUX
  set ttymouse=xterm2
endif

let mapleader = ','
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l
noremap <leader>l :Align
nnoremap <leader>a :Ack
nnoremap <leader>b :CtrlPBuffer<CR>
nnoremap <leader>d :NERDTreeToggle<CR>
nnoremap <leader>f :NERDTreeFind<CR>
nnoremap <leader>t :CtrlP<CR>
nnoremap <leader>T :CtrlPClearCache<CR>:CtrlP<CR>
nnoremap <leader>] :TagbarToggle<CR>
nnoremap <leader><space> :call whitespace#strip_trailing()<CR>
nnoremap <leader>g :GitGutterToggle<CR>
nnoremap <leader>c <Plug>Kwbd
nnoremap <Leader>= :%!jq -M '.'<CR>
noremap <silent> <leader>V :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>

" plugin settings
let g:ctrlp_match_window = 'order:ttb,max:20'
let g:NERDSpaceDelims=1
let g:gitgutter_enabled = 0
let g:syntastic_ruby_checkers = ['mri', 'rubocop']
let g:vimrubocop_rubocop_cmd = 'bundle exec rubocop '
let g:ycm_path_to_python_interpreter = '/usr/local/bin/python'

" Use The Silver Searcher https://github.com/ggreer/the_silver_searcher
if executable('ag')
  let g:ackprg = 'ag --nogroup --column'

  " Use Ag over Grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

" fdoc is yaml
autocmd BufRead,BufNewFile *.fdoc set filetype=yaml
" md is markdown
" autocmd BufRead,BufNewFile *.md set filetype=markdown
" vim-flavored-markdown config
augroup markdown
  au!
  au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END

" extra rails.vim help
autocmd User Rails silent! Rnavcommand decorator      app/decorators            -glob=**/* -suffix=_decorator.rb
autocmd User Rails silent! Rnavcommand observer       app/observers             -glob=**/* -suffix=_observer.rb
autocmd User Rails silent! Rnavcommand feature        features                  -glob=**/* -suffix=.feature
autocmd User Rails silent! Rnavcommand job            app/jobs                  -glob=**/* -suffix=_job.rb
autocmd User Rails silent! Rnavcommand mediator       app/mediators             -glob=**/* -suffix=_mediator.rb
autocmd User Rails silent! Rnavcommand stepdefinition features/step_definitions -glob=**/* -suffix=_steps.rb
" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =


" Fix Cursor in TMUX
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

"set nocursorline " don't highlight current line

" keyboard shortcuts
inoremap jj <ESC>

let g:hybrid_use_iTerm_colors = 1
let g:hybrid_use_Xresources = 1
" gui settings
if (&t_Co == 256 || has('gui_running'))
  if ($TERM_PROGRAM == 'iTerm.app')
    set background=dark
    colorscheme hybrid
    "colorscheme solarized
    "colorscheme lucius
  else
    colorscheme solarized
  endif
endif

" Go crazy!
"if filereadable(expand("~/.vimrc.local"))
"  " In your .vimrc.local, you might like:
"  "
"  " set autowrite
"  " set nocursorline
"  " set nowritebackup
"  set whichwrap+=<,>,h,l,[,] " Wrap arrow keys between lines
"  "
"  " autocmd! bufwritepost .vimrc source ~/.vimrc
"  " noremap! jj <ESC>
"  source ~/.vimrc.local
"endif

" Continue on line 85 in the rest of Dunn's config https://github.com/Attamusc/dotfiles/blob/master/vim/vimrc.symlink#L87

